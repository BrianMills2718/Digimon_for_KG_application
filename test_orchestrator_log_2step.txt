2025-05-30 21:56:28.367 | INFO     | __main__:<module>:24 - Orchestrator Test: main_config object type: <class 'Option.Config2.Config'>
2025-05-30 21:56:28.367 | INFO     | __main__:<module>:25 - Orchestrator Test: Is main_config an instance of Option.Config2.Config? True
2025-05-30 21:56:28.367 | INFO     | __main__:<module>:26 - Orchestrator Test: Does main_config have 'graph' attribute? True
2025-05-30 21:56:28.367 | INFO     | __main__:<module>:28 - Orchestrator Test: main_config.graph is: extra_fields=None type='er_graph' graph_type='er_graph' extract_two_step=True max_gleaning=1 force=False enable_entity_description=False enable_entity_type=False enable_edge_description=False enable_edge_name=False prior_prob=0.8 enable_edge_keywords=False use_community=False graph_cluster_algorithm='leiden' max_graph_cluster_size=10 graph_cluster_seed=3735928559 summary_max_tokens=500 llm_model_max_token_size=32768 build_tree_from_leaves=False reduction_dimension=5 summarization_length=100 num_layers=10 top_k=5 threshold_cluster_num=5000 start_layer=5 graph_cluster_params=None selection_mode='top_k' max_length_in_cluster=3500 threshold=0.1 cluster_metric='cosine' verbose=False random_seed=224 enforce_sub_communities=False max_size_percentage=0.2 tol=0.0001 max_iter=300 size_of_clusters=10 custom_ontology_path='Config/custom_ontology.json' loaded_custom_ontology=None similarity_threshold=0.8 similarity_top_k=10 similarity_max=1.0
2025-05-30 21:56:28.368 | INFO     | __main__:<module>:29 - Orchestrator Test: Type of main_config.graph: <class 'Config.GraphConfig.GraphConfig'>
2025-05-30 21:56:28.368 | INFO     | __main__:<module>:33 - Orchestrator Test: main_config.graph.type is: er_graph
2025-05-30 21:56:28.368 | INFO     | __main__:main_orchestrator_test:132 - --- Starting Agent Orchestrator Test ---
2025-05-30 21:56:28.368 | INFO     | __main__:setup_graphrag_context_for_orchestrator:46 - Orchestrator Test: Setting up GraphRAGContext...
2025-05-30 21:56:28.368 | INFO     | __main__:setup_graphrag_context_for_orchestrator:50 - Orchestrator Test: Embedding provider type: <class 'llama_index.embeddings.openai.base.OpenAIEmbedding'>
2025-05-30 21:56:28.368 | INFO     | Core.Graph.GraphFactory:get_graph:43 - GraphFactory: Creating graph of type 'er_graph' with kwargs: {'data_path': './results/MySampleTexts/kg_graph', 'storage_type': 'networkx', 'storage_instance': NetworkXStorage(config=None, namespace=<Core.Storage.NameSpace.NameSpace object at 0x7fbe5ca98c70>, name='graph_storage_nx_data.graphml')}
2025-05-30 21:56:28.368 | DEBUG    | Core.Graph.GraphFactory:_create_er_graph:50 - GraphFactory._create_er_graph: full_config type: <class 'Option.Config2.Config'>, constructor_kwargs: {'data_path': './results/MySampleTexts/kg_graph', 'storage_type': 'networkx', 'storage_instance': NetworkXStorage(config=None, namespace=<Core.Storage.NameSpace.NameSpace object at 0x7fbe5ca98c70>, name='graph_storage_nx_data.graphml')}
2025-05-30 21:56:28.368 | INFO     | Core.Graph.BaseGraph:load_persisted_graph:32 - Attempting to load persisted graph via NetworkXStorage.load_graph(force=False)
2025-05-30 21:56:28.369 | INFO     | Core.Storage.NetworkXStorage:load_nx_graph:33 - Attempting to load the graph from: ./results/MySampleTexts/kg_graph/graph_storage_nx_data.graphml
2025-05-30 21:56:28.373 | INFO     | Core.Storage.NetworkXStorage:load_nx_graph:37 - Successfully loaded graph from: ./results/MySampleTexts/kg_graph/graph_storage_nx_data.graphml with 108 nodes and 72 edges
2025-05-30 21:56:28.373 | INFO     | __main__:setup_graphrag_context_for_orchestrator:79 - Orchestrator Test: Graph instance loaded. Node count: 108. Type: <class 'Core.Graph.ERGraph.ERGraph'>
2025-05-30 21:56:28.373 | INFO     | __main__:setup_graphrag_context_for_orchestrator:81 - Orchestrator Test: Type of graph_instance from factory: <class 'Core.Graph.ERGraph.ERGraph'>
2025-05-30 21:56:28.373 | INFO     | Core.Index.BaseIndex:load:16 - Attempting to load existing index from: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.373 | INFO     | Core.Index.FaissIndex:_load_index:234 - FaissIndex._load_index: Attempting to load index from persist_path: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.373 | INFO     | Core.Index.FaissIndex:_load_index:237 - FaissIndex._load_index: Set Settings.embed_model to: <class 'llama_index.embeddings.openai.base.OpenAIEmbedding'>
2025-05-30 21:56:28.373 | INFO     | Core.Index.FaissIndex:_load_index:242 - FaissIndex._load_index: Persist path ./results/MySampleTexts/kg_graph/entities_vdb confirmed to exist.
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:243 - FaissIndex._load_index: Contents of persist_path: ['index_store.json', 'docstore.json', 'default__vector_store.json', 'image__vector_store.json', 'graph_store.json']
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:247 - FaissIndex._load_index: Successfully called FaissVectorStore.from_persist_dir().
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:248 - FaissIndex._load_index: Type of loaded vector_store: <class 'llama_index.vector_stores.faiss.base.FaissVectorStore'>
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:251 - FaissIndex._load_index: Loaded vector_store has attribute _faiss_index.
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:252 - FaissIndex._load_index: vector_store._faiss_index object: <faiss.swigfaiss_avx2.IndexHNSWFlat; proxy of <Swig Object of type 'faiss::IndexHNSWFlat *' at 0x7fbe5ca98ab0> >
2025-05-30 21:56:28.374 | INFO     | Core.Index.FaissIndex:_load_index:253 - FaissIndex._load_index: Loaded vector_store._faiss_index.ntotal: 108
2025-05-30 21:56:28.375 | INFO     | Core.Index.FaissIndex:_load_index:264 - FaissIndex._load_index: StorageContext created from defaults with loaded vector_store.
2025-05-30 21:56:28.485 | INFO     | Core.Index.FaissIndex:_load_index:271 - FaissIndex._load_index: Successfully loaded index from storage. Index object: <llama_index.core.indices.vector_store.base.VectorStoreIndex object at 0x7fbe5ca9a3b0>
2025-05-30 21:56:28.485 | INFO     | Core.Index.FaissIndex:_load_index:274 - FaissIndex._load_index: Index ID: 76756585-8f1b-482c-bd54-bbe56f6eebf9, Summary: None
2025-05-30 21:56:28.485 | INFO     | Core.Index.BaseIndex:load:20 - Successfully loaded existing index from: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.485 | INFO     | __main__:setup_graphrag_context_for_orchestrator:101 - Orchestrator Test: Entities VDB loaded successfully for context setup.
2025-05-30 21:56:28.485 | INFO     | __main__:setup_graphrag_context_for_orchestrator:128 - Orchestrator Test: GraphRAGContext created.
2025-05-30 21:56:28.486 | INFO     | __main__:main_orchestrator_test:209 - Orchestrator Test: ExecutionPlan defined:
{
  "plan_id": "test_plan_002_vdb_then_ppr",
  "plan_description": "2-step plan: VDB search for 'american revolution', then PPR on results.",
  "target_dataset_name": "MySampleTexts",
  "ontology_setup": null,
  "global_llm_config_patch": null,
  "global_embedding_config_patch": null,
  "plan_inputs": {
    "main_query": "causes of the american revolution"
  },
  "steps": [
    {
      "step_id": "step1_vdb_search",
      "description": "Perform a VDB search for entities related to the user query.",
      "action": {
        "chain_description": null,
        "tools": [
          {
            "tool_id": "Entity.VDBSearch",
            "description": "Find initial relevant entities using VDB.",
            "parameters": {
              "vdb_reference_id": "entities_vdb",
              "top_k_results": 3
            },
            "inputs": {
              "query_text": "plan_inputs.main_query"
            },
            "named_outputs": {
              "vdb_search_results_object": "Raw EntityVDBSearchOutputs object from VDB search."
            }
          }
        ]
      }
    },
    {
      "step_id": "step2_entity_ppr",
      "description": "Run Personalized PageRank on entities found by VDB search.",
      "action": {
        "chain_description": null,
        "tools": [
          {
            "tool_id": "Entity.PPR",
            "description": "Calculate PPR scores for seed entities.",
            "parameters": {
              "graph_reference_id": "kg_graph",
              "personalization_weight_alpha": 0.25,
              "max_iterations": 50,
              "top_k_results": 5
            },
            "inputs": {
              "seed_entity_ids": {
                "from_step_id": "step1_vdb_search",
                "named_output_key": "vdb_search_results_object"
              }
            },
            "named_outputs": {
              "ppr_ranked_entities": "List of (entity_id, ppr_score) tuples from PPR."
            }
          }
        ]
      }
    }
  ]
}
2025-05-30 21:56:28.486 | INFO     | Core.AgentOrchestrator.orchestrator:_register_tools:34 - AgentOrchestrator: Registered 2 tools with Pydantic models: ['Entity.VDBSearch', 'Entity.PPR']
2025-05-30 21:56:28.486 | INFO     | __main__:main_orchestrator_test:214 - Orchestrator Test: Executing plan...
2025-05-30 21:56:28.486 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:38 - Orchestrator: Starting execution of plan ID: test_plan_002_vdb_then_ppr - 2-step plan: VDB search for 'american revolution', then PPR on results.
2025-05-30 21:56:28.486 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:42 - Orchestrator: Executing Step 1/2: step1_vdb_search - Perform a VDB search for entities related to the user query.
2025-05-30 21:56:28.486 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:47 - Orchestrator: Step step1_vdb_search is a DynamicToolChainConfig with 1 tool(s).
2025-05-30 21:56:28.486 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:64 - Orchestrator: Executing tool 1/1 in step step1_vdb_search: Entity.VDBSearch
2025-05-30 21:56:28.486 | DEBUG    | Core.AgentOrchestrator.orchestrator:_resolve_tool_inputs:149 - Orchestrator: Resolved input 'query_text' from plan_inputs, key 'main_query'
2025-05-30 21:56:28.486 | DEBUG    | Core.AgentOrchestrator.orchestrator:execute_plan:87 - Orchestrator: Attempting to instantiate EntityVDBSearchInputs with params: {'vdb_reference_id': 'entities_vdb', 'top_k_results': 3, 'query_text': 'causes of the american revolution'}
2025-05-30 21:56:28.487 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:89 - Orchestrator: Successfully instantiated EntityVDBSearchInputs for tool Entity.VDBSearch
2025-05-30 21:56:28.487 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:92 - Orchestrator: Calling tool function: entity_vdb_search_tool for tool ID: Entity.VDBSearch
2025-05-30 21:56:28.487 | INFO     | Core.Index.BaseIndex:load:16 - Attempting to load existing index from: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.487 | INFO     | Core.Index.FaissIndex:_load_index:234 - FaissIndex._load_index: Attempting to load index from persist_path: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.487 | INFO     | Core.Index.FaissIndex:_load_index:237 - FaissIndex._load_index: Set Settings.embed_model to: <class 'llama_index.embeddings.openai.base.OpenAIEmbedding'>
2025-05-30 21:56:28.487 | INFO     | Core.Index.FaissIndex:_load_index:242 - FaissIndex._load_index: Persist path ./results/MySampleTexts/kg_graph/entities_vdb confirmed to exist.
2025-05-30 21:56:28.487 | INFO     | Core.Index.FaissIndex:_load_index:243 - FaissIndex._load_index: Contents of persist_path: ['index_store.json', 'docstore.json', 'default__vector_store.json', 'image__vector_store.json', 'graph_store.json']
2025-05-30 21:56:28.488 | INFO     | Core.Index.FaissIndex:_load_index:247 - FaissIndex._load_index: Successfully called FaissVectorStore.from_persist_dir().
2025-05-30 21:56:28.488 | INFO     | Core.Index.FaissIndex:_load_index:248 - FaissIndex._load_index: Type of loaded vector_store: <class 'llama_index.vector_stores.faiss.base.FaissVectorStore'>
2025-05-30 21:56:28.488 | INFO     | Core.Index.FaissIndex:_load_index:251 - FaissIndex._load_index: Loaded vector_store has attribute _faiss_index.
2025-05-30 21:56:28.488 | INFO     | Core.Index.FaissIndex:_load_index:252 - FaissIndex._load_index: vector_store._faiss_index object: <faiss.swigfaiss_avx2.IndexHNSWFlat; proxy of <Swig Object of type 'faiss::IndexHNSWFlat *' at 0x7fbe5ca9a280> >
2025-05-30 21:56:28.488 | INFO     | Core.Index.FaissIndex:_load_index:253 - FaissIndex._load_index: Loaded vector_store._faiss_index.ntotal: 108
2025-05-30 21:56:28.489 | INFO     | Core.Index.FaissIndex:_load_index:264 - FaissIndex._load_index: StorageContext created from defaults with loaded vector_store.
2025-05-30 21:56:28.491 | INFO     | Core.Index.FaissIndex:_load_index:271 - FaissIndex._load_index: Successfully loaded index from storage. Index object: <llama_index.core.indices.vector_store.base.VectorStoreIndex object at 0x7fbe5ca9a2f0>
2025-05-30 21:56:28.491 | INFO     | Core.Index.FaissIndex:_load_index:274 - FaissIndex._load_index: Index ID: 76756585-8f1b-482c-bd54-bbe56f6eebf9, Summary: None
2025-05-30 21:56:28.491 | INFO     | Core.Index.BaseIndex:load:20 - Successfully loaded existing index from: ./results/MySampleTexts/kg_graph/entities_vdb
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:94 - Orchestrator: Tool Entity.VDBSearch executed. Output type: <class 'Core.AgentSchema.tool_contracts.EntityVDBSearchOutputs'>
2025-05-30 21:56:28.997 | DEBUG    | Core.AgentOrchestrator.orchestrator:execute_plan:95 - Orchestrator: Raw output from tool Entity.VDBSearch: similar_entities=[('f667f6639611608ec904ffdc8aee83a4', 0.7815490365028381), ('01d6bdf17b79451927aa8e2e1ec87bed', 0.7901535630226135), ('5c7fd3c6be5bf98f2b891251ba8effba', 0.8133000135421753)]
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:111 - Orchestrator: Stored output 'vdb_search_results_object' for step step1_vdb_search (tool Entity.VDBSearch) as Pydantic model or its primary attribute.
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:42 - Orchestrator: Executing Step 2/2: step2_entity_ppr - Run Personalized PageRank on entities found by VDB search.
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:47 - Orchestrator: Step step2_entity_ppr is a DynamicToolChainConfig with 1 tool(s).
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:64 - Orchestrator: Executing tool 1/1 in step step2_entity_ppr: Entity.PPR
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:_resolve_tool_inputs:173 - Orchestrator: Transformed output from step 'step1_vdb_search' (key 'vdb_search_results_object') into List[str] for input 'seed_entity_ids'. Extracted 3 IDs.
2025-05-30 21:56:28.997 | DEBUG    | Core.AgentOrchestrator.orchestrator:execute_plan:87 - Orchestrator: Attempting to instantiate EntityPPRInputs with params: {'graph_reference_id': 'kg_graph', 'personalization_weight_alpha': 0.25, 'max_iterations': 50, 'top_k_results': 5, 'seed_entity_ids': ['f667f6639611608ec904ffdc8aee83a4', '01d6bdf17b79451927aa8e2e1ec87bed', '5c7fd3c6be5bf98f2b891251ba8effba']}
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:89 - Orchestrator: Successfully instantiated EntityPPRInputs for tool Entity.PPR
2025-05-30 21:56:28.997 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:92 - Orchestrator: Calling tool function: entity_ppr_tool for tool ID: Entity.PPR
2025-05-30 21:56:28.997 | INFO     | Core.AgentTools.entity_tools:entity_ppr_tool:232 - Executing tool 'Entity.PPR' with parameters: graph_reference_id='kg_graph' seed_entity_ids=['f667f6639611608ec904ffdc8aee83a4', '01d6bdf17b79451927aa8e2e1ec87bed', '5c7fd3c6be5bf98f2b891251ba8effba'] personalization_weight_alpha=0.25 max_iterations=50 top_k_results=5
2025-05-30 21:56:28.998 | INFO     | Core.AgentTools.entity_tools:entity_ppr_tool:265 - Entity.PPR: Using RetrieverConfig: {'top_k_entity_for_ppr': 5, 'top_k': 10}
2025-05-30 21:56:28.998 | INFO     | Core.AgentTools.entity_tools:entity_ppr_tool:298 - Entity.PPR: Calling _find_relevant_entities_by_ppr with 3 seeds. Linking: True. Args: ['f667f6639611608ec904ffdc8aee83a4', '01d6bdf17b79451927aa8e2e1ec87bed', '5c7fd3c6be5bf98f2b891251ba8effba']
2025-05-30 21:56:29.740 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:60 - BaseRetriever: Diagnosing entities_vdb before first call in _run_personalized_pagerank:
2025-05-30 21:56:29.740 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:64 - BaseRetriever: type(self.entities_vdb) is <class 'Core.Index.FaissIndex.FaissIndex'>
2025-05-30 21:56:29.740 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:65 - BaseRetriever: hasattr(self.entities_vdb, 'retrieval_nodes_with_score_matrix') is True
2025-05-30 21:56:29.740 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:67 - BaseRetriever: self.entities_vdb.retrieval_nodes_with_score_matrix is <bound method FaissIndex.retrieval_nodes_with_score_matrix of <Core.Index.FaissIndex.FaissIndex object at 0x7fbe5ca99d80>>
2025-05-30 21:56:29.740 | INFO     | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:26 - FaissIndex.retrieval_nodes_with_score_matrix called with query_list type: <class 'list'>, top_k: 1
2025-05-30 21:56:29.740 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:45 - FaissIndex.retrieval_nodes_with_score_matrix: Processing list of query items (count: 3)
2025-05-30 21:56:29.740 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:49 -   Item 0 is dict, using entity_name: american rebellion
2025-05-30 21:56:29.741 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:49 -   Item 1 is dict, using entity_name: anti tax demonstrators
2025-05-30 21:56:29.741 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:49 -   Item 2 is dict, using entity_name: anti tax demonstrators
2025-05-30 21:56:29.741 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:66 - FaissIndex.retrieval_nodes_with_score_matrix: Performing VDB lookup for target_query: 'american rebellion' with top_k=1
2025-05-30 21:56:29.891 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:77 -   Lookup for 'american rebellion' found 1 nodes.
2025-05-30 21:56:29.891 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'american rebellion' (idx 99): score 1.5735113265691325e-06, new aggregated score 1.5735113265691325e-06
2025-05-30 21:56:29.891 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:66 - FaissIndex.retrieval_nodes_with_score_matrix: Performing VDB lookup for target_query: 'anti tax demonstrators' with top_k=1
2025-05-30 21:56:30.049 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:77 -   Lookup for 'anti tax demonstrators' found 1 nodes.
2025-05-30 21:56:30.049 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'anti tax demonstrators' (idx 97): score 1.5009178468972095e-06, new aggregated score 1.5009178468972095e-06
2025-05-30 21:56:30.049 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:66 - FaissIndex.retrieval_nodes_with_score_matrix: Performing VDB lookup for target_query: 'anti tax demonstrators' with top_k=1
2025-05-30 21:56:30.210 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:77 -   Lookup for 'anti tax demonstrators' found 1 nodes.
2025-05-30 21:56:30.210 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'anti tax demonstrators' (idx 97): score 1.5009178468972095e-06, new aggregated score 3.001835693794419e-06
2025-05-30 21:56:30.210 | INFO     | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:102 - FaissIndex.retrieval_nodes_with_score_matrix: Returning normalized score vector (sum before norm: 0.0000).
2025-05-30 21:56:30.210 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:77 - BaseRetriever: Diagnosing entities_vdb before second call in _run_personalized_pagerank:
2025-05-30 21:56:30.210 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:81 - BaseRetriever: type(self.entities_vdb) is <class 'Core.Index.FaissIndex.FaissIndex'>
2025-05-30 21:56:30.210 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:82 - BaseRetriever: hasattr(self.entities_vdb, 'retrieval_nodes_with_score_matrix') is True
2025-05-30 21:56:30.210 | DEBUG    | Core.Retriever.BaseRetriever:_run_personalized_pagerank:84 - BaseRetriever: self.entities_vdb.retrieval_nodes_with_score_matrix is <bound method FaissIndex.retrieval_nodes_with_score_matrix of <Core.Index.FaissIndex.FaissIndex object at 0x7fbe5ca99d80>>
2025-05-30 21:56:30.210 | INFO     | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:26 - FaissIndex.retrieval_nodes_with_score_matrix called with query_list type: <class 'str'>, top_k: 5
2025-05-30 21:56:30.210 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:43 - FaissIndex.retrieval_nodes_with_score_matrix: Processing single query string: f667f6639611608ec904ffdc8aee83a4
2025-05-30 21:56:30.211 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:66 - FaissIndex.retrieval_nodes_with_score_matrix: Performing VDB lookup for target_query: 'f667f6639611608ec904ffdc8aee83a4' with top_k=5
2025-05-30 21:56:32.109 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:77 -   Lookup for 'f667f6639611608ec904ffdc8aee83a4' found 5 nodes.
2025-05-30 21:56:32.109 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'american rebellion' (idx 99): score 1.598065733909607, new aggregated score 1.598065733909607
2025-05-30 21:56:32.109 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'glorious revolution of 1688' (idx 34): score 1.6028568744659424, new aggregated score 1.6028568744659424
2025-05-30 21:56:32.110 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'capt  levi preston' (idx 29): score 1.6146347522735596, new aggregated score 1.6146347522735596
2025-05-30 21:56:32.110 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'anti tax demonstrators' (idx 97): score 1.6356499195098877, new aggregated score 1.6356499195098877
2025-05-30 21:56:32.110 | DEBUG    | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:85 -     Node 'storming of the bastille' (idx 59): score 1.643096685409546, new aggregated score 1.643096685409546
2025-05-30 21:56:32.110 | INFO     | Core.Index.FaissIndex:retrieval_nodes_with_score_matrix:102 - FaissIndex.retrieval_nodes_with_score_matrix: Returning normalized score vector (sum before norm: 8.0943).
2025-05-30 21:56:32.111 | INFO     | Core.AgentTools.entity_tools:entity_ppr_tool:318 - Entity.PPR: Processing 10 nodes returned by retriever's PPR.
2025-05-30 21:56:32.111 | INFO     | Core.AgentTools.entity_tools:entity_ppr_tool:344 - Entity.PPR tool returning 5 ranked entities.
2025-05-30 21:56:32.111 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:94 - Orchestrator: Tool Entity.PPR executed. Output type: <class 'Core.AgentSchema.tool_contracts.EntityPPROutputs'>
2025-05-30 21:56:32.111 | DEBUG    | Core.AgentOrchestrator.orchestrator:execute_plan:95 - Orchestrator: Raw output from tool Entity.PPR: ranked_entities=[('anti tax demonstrators', 0.39407399771119334), ('american rebellion', 0.2522671759293282), ('capt  levi preston', 0.11646025191798753), ('storming of the bastille', 0.09228404218613252), ('glorious revolution of 1688', 0.09045190653443744)]
2025-05-30 21:56:32.111 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:111 - Orchestrator: Stored output 'ppr_ranked_entities' for step step2_entity_ppr (tool Entity.PPR) as Pydantic model or its primary attribute.
2025-05-30 21:56:32.111 | INFO     | Core.AgentOrchestrator.orchestrator:execute_plan:131 - Orchestrator: Plan execution finished. Final result from step 'step2_entity_ppr': {'ppr_ranked_entities': EntityPPROutputs(ranked_entities=[('anti tax demonstrators', 0.39407399771119334), ('american rebellion', 0.2522671759293282), ('capt  levi preston', 0.11646025191798753), ('storming of the bastille', 0.09228404218613252), ('glorious revolution of 1688', 0.09045190653443744)])}
2025-05-30 21:56:32.111 | INFO     | __main__:main_orchestrator_test:217 - Orchestrator Test: Plan execution finished. Final output from orchestrator (last step's output): {'ppr_ranked_entities': EntityPPROutputs(ranked_entities=[('anti tax demonstrators', 0.39407399771119334), ('american rebellion', 0.2522671759293282), ('capt  levi preston', 0.11646025191798753), ('storming of the bastille', 0.09228404218613252), ('glorious revolution of 1688', 0.09045190653443744)])}
2025-05-30 21:56:32.111 | INFO     | __main__:main_orchestrator_test:218 - Orchestrator Test: All step outputs: {'step1_vdb_search': {'vdb_search_results_object': EntityVDBSearchOutputs(similar_entities=[('f667f6639611608ec904ffdc8aee83a4', 0.7815490365028381), ('01d6bdf17b79451927aa8e2e1ec87bed', 0.7901535630226135), ('5c7fd3c6be5bf98f2b891251ba8effba', 0.8133000135421753)])}, 'step2_entity_ppr': {'ppr_ranked_entities': EntityPPROutputs(ranked_entities=[('anti tax demonstrators', 0.39407399771119334), ('american rebellion', 0.2522671759293282), ('capt  levi preston', 0.11646025191798753), ('storming of the bastille', 0.09228404218613252), ('glorious revolution of 1688', 0.09045190653443744)])}}
2025-05-30 21:56:32.112 | INFO     | __main__:main_orchestrator_test:220 - --- Agent Orchestrator Test Finished ---
INFO [Config.default]: Loaded default config from Option/Config2.yaml
WARNING [Config.default]: Graph config not found in default YAMLs/data, creating default GraphConfig.
WARNING [Config.default]: Chunk config not found in default YAMLs/data, creating default ChunkConfig.
WARNING [Config.default]: Retriever config not found or invalid in default YAMLs/data, creating default RetrieverConfig.
WARNING [Config.default]: Query config (query_config) not found or invalid in default YAMLs/data, creating default QueryConfig.
INFO [Config.default]: Successfully created default Config instance.
Executing tool 'Entity.VDBSearch' with parameters: vdb_reference_id='entities_vdb' query_text='causes of the american revolution' query_embedding=None embedding_model_id=None top_k_results=3
Attempting to use VDB from persist_path: ./results/MySampleTexts/kg_graph/entities_vdb
Successfully loaded VDB 'entities_vdb'.
Searching VDB 'entities_vdb' for query 'causes of the american revolution' with top_k=3
